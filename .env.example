# Google Cloud Configuration
GCP_PROJECT_ID=your-gcp-project-id
BQ_DATASET_ID=your_bigquery_dataset_name
BQ_LOCATION=US

# Service Account (for reference only)
GOOGLE_CLOUD_SERVICE_ACCOUNT=your-service-account@your-project.iam.gserviceaccount.com

# Optional BigQuery Settings
BQ_TABLE_PREFIX=insurance_
BQ_ENABLE_PARTITIONING=true
BQ_ENABLE_CLUSTERING=true

# Vertex AI and Gemini Configuration
VERTEX_AI_LOCATION=us-central1
GEMINI_MODEL_NAME=gemini-2.5-flash-lite

# Logging
LOG_LEVEL=INFO

# AUTHENTICATION NOTES:
# This application uses Google Cloud Application Default Credentials (ADC)
# 
# Setup ADC:
# Option 1 - For local development (RECOMMENDED):
#   gcloud auth application-default login
#
# Option 2 - For production/service accounts:
#   Set GOOGLE_APPLICATION_CREDENTIALS environment variable to service account key path
#   OR ensure service account is attached to compute resource (GCE, Cloud Run, etc.)
#
# No need to specify credentials in this .env file - ADC handles it automatically
#
# VERTEX AI SETUP:
# Ensure Vertex AI API is enabled in your GCP project:
#   gcloud services enable aiplatform.googleapis.com
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with your actual configuration
# 3. Run: gcloud auth application-default login (for local development)
# 4. Enable Vertex AI API: gcloud services enable aiplatform.googleapis.com
# 5. Never commit .env file to version control
